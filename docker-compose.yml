services:
  slapit-backend:
    image: ghcr.io/harrysctb/slapit/slapit-backend:latest
    container_name: slapit-backend
    env_file:
      - ./backend/.env
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8000/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 6
      start_period: 20s
    restart: unless-stopped
    ports:
      - "8000:8000"

  krakend:
    image: krakend:2.9
    container_name: krakend
    command: ["run", "-c", "/etc/krakend/krakend.json"]
    volumes:
      - ./api-gateway/krakend.json:/etc/krakend/krakend.json:ro
    ports:
      - "8080:8080"
    depends_on:
      slapit-backend:
        condition: service_healthy
    restart: unless-stopped

  prom:
    image: prom/prometheus:latest
    container_name: prom
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    depends_on:
      - prom
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.7
    container_name: loki
    command: ["-config.file=/etc/loki/config.yml"]
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml:ro
      - loki-data:/loki
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.7
    container_name: promtail
    command: ["-config.file=/etc/promtail/config.yml"]
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - loki
    restart: unless-stopped

volumes:
  grafana-data: {}
  loki-data: {}