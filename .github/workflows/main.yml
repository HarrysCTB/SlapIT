name: CI/CD Backend

on:
  push:
    branches: [ main ]         # déploie uniquement quand tu pushes sur main
  workflow_dispatch:            # permet aussi de déclencher à la main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write          # nécessaire pour pousser sur GHCR

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- Build & Push image vers GHCR ----------
      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push image (owner/repo en minuscules)
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          IMAGE="ghcr.io/${OWNER_LC}/slapit-backend"
          echo "Image: $IMAGE:latest"
          docker build -t "$IMAGE:latest" ./backend
          docker push "$IMAGE:latest"

      # ---------- Déploiement: rsync des fichiers puis compose ----------
      - name: Add VPS to known_hosts
        shell: bash
        run: |
          SSH_DIR="${HOME:-/github/home}/.ssh"
          mkdir -p "$SSH_DIR"
          chmod 700 "$SSH_DIR"
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> "$SSH_DIR/known_hosts"

      - name: Sync repo to VPS (rsync)
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -az --delete
          path: ./
          remote_path: /home/${{ secrets.VPS_USER }}/apps/slapit
          remote_host: ${{ secrets.VPS_HOST }}
          remote_user: ${{ secrets.VPS_USER }}
          remote_key: ${{ secrets.VPS_SSH_KEY }}

      - name: Compose pull & up
        uses: appleboy/ssh-action@v1.2.0
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          envs: SUPABASE_URL,SUPABASE_KEY
          script: |
            set -euo pipefail
            APP_DIR="/home/${{ secrets.VPS_USER }}/apps/slapit"
            cd "$APP_DIR"
      
            # Forcer l'image GHCR (owner en minuscules)
            OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
            sed -i "s|image: .*slapit-backend.*|image: ghcr.io/${OWNER_LC}/slapit-backend:latest|g" docker-compose.yml || true
      
            # Écrire/mettre à jour backend/.env depuis les secrets (sans heredoc)
            mkdir -p backend
            {
              echo "SUPABASE_URL=${SUPABASE_URL}"
              echo "SUPABASE_KEY=${SUPABASE_KEY}"
              echo "ENV=production"
            } > backend/.env
      
            # Déploiement
            docker compose pull
            docker compose up -d --remove-orphans
            docker system prune -f
