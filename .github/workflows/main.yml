name: CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Build & push image backend sur GHCR
      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push backend image
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          IMAGE="ghcr.io/${OWNER_LC}/slapit-backend:latest"
          echo "Building $IMAGE"
          docker build -t "$IMAGE" ./backend
          docker push "$IMAGE"

      # 2) Copier le repo sur le VPS (SCP)
      - name: Upload repo to VPS (SCP)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          source: "."
          target: "/home/${{ secrets.VPS_USER }}/apps/slapit"
          overwrite: true
          strip_components: 0

      # 3) Lancer docker compose à distance
      - name: Remote docker compose up
        uses: appleboy/ssh-action@v1.2.0
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }} # optionnel
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            set -euo pipefail
            APP_DIR="/home/${{ secrets.VPS_USER }}/apps/slapit"
            cd "$APP_DIR"

            # .env backend à jour
            mkdir -p backend
            cat > backend/.env <<'EOF'
            SUPABASE_URL=${SUPABASE_URL}
            SUPABASE_KEY=${SUPABASE_KEY}
            ENV=production
            EOF

            # (Optionnel) login GHCR côté VPS si l'image est privée
            if [ -n "${GHCR_PAT:-}" ]; then
              echo "${GHCR_PAT}" | docker login ghcr.io -u "${GITHUB_ACTOR}" --password-stdin
            fi

            # Forcer le nom d'image GHCR en :latest dans compose (si besoin)
            OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
            sed -i "s|image: .*slapit-backend.*|image: ghcr.io/${OWNER_LC}/slapit-backend:latest|g" docker-compose.yml || true

            # Pull & Up
            docker compose pull
            docker compose up -d --remove-orphans

            # Optionnel: nettoyage
            docker system prune -f
