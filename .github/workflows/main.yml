name: CI/CD Backend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push backend image
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          IMAGE="ghcr.io/${OWNER_LC}/slapit-backend:latest"
          echo "Building $IMAGE"
          docker build -t "$IMAGE" ./backend
          docker push "$IMAGE"

      # Déploiement SSH: pas de copie de fichiers, juste compose pull/up
      - name: Deploy via SSH (docker compose pull & up)
        uses: appleboy/ssh-action@v1.2.0
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          # Si ton image GHCR est privée, crée un PAT dans secrets.GHCR_PAT
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            set -euo pipefail
            APP_DIR="/home/${{ secrets.VPS_USER }}/apps/slapit"
            cd "$APP_DIR"

            OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
            sed -i "s|image: .*slapit-backend.*|image: ghcr.io/${OWNER_LC}/slapit-backend:latest|g" docker-compose.yml || true

            mkdir -p backend
            {
              echo "SUPABASE_URL=${SUPABASE_URL}"
              echo "SUPABASE_KEY=${SUPABASE_KEY}"
              echo "ENV=production"
            } > backend/.env

            if [ -n "${GHCR_PAT:-}" ]; then
              echo "${GHCR_PAT}" | docker login ghcr.io -u "${{ github.repository_owner }}" --password-stdin
            fi

            docker compose pull
            docker compose up -d --remove-orphans

            # Un petit ménage
            docker system prune -f
